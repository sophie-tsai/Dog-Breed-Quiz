{"version":3,"sources":["components/StartPage/StartPage.js","firebaseConfig.js","firebaseRef.js","components/Score/Score.js","components/AnswerContainer/AnswerChoices.js","components/AnswerContainer/AnswerContainer.js","data/breedsData.js","utils/dogApi.js","components/GamePage/Game.js","components/GamePage/GamePage.js","components/Leaderboard/HighScore.js","components/Leaderboard/Leaderboard.js","utils/preloadingApi.js","Signature.js","App.js","index.js"],"names":["StartPage","props","imagesLoaded","setStartTime","trophyIcon","icon","faTrophy","size","className","to","onClick","startTimeStamp","Date","getTime","disabled","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","scoreRef","collection","Score","score","endTime","startTime","useState","finalScore","setFinalScore","playerName","setPlayerName","useEffect","scoreSubtractTime","Math","floor","type","placeholder","value","onChange","event","target","required","faArrowRight","name","toLowerCase","add","AnswerChoices","handleChoice","backgroundColor","text","style","AnswerContainer","data","breed","multipleChoiceAnswers","wasChoiceSelected","setWasChoiceSelected","setMultipleChoiceAnswers","incrementScore","selectedAnswer","preventDefault","id","updatedChoices","selectedChoiceText","map","multipleChoice","showAnswerResult","answerChoices","element","key","breeds","affenpinscher","african","airedale","akita","appenzeller","australian","basenji","beagle","bluetick","borzoi","bouvier","boxer","brabancon","briard","buhund","bulldog","bullterrier","cairn","cattledog","chihuahua","chow","clumber","cockapoo","collie","coonhound","corgi","cotondetulear","dachshund","dalmatian","dane","deerhound","dhole","dingo","doberman","elkhound","entlebucher","eskimo","frise","germanshepherd","greyhound","groenendael","havanese","hound","husky","keeshond","kelpie","komondor","kuvasz","labrador","leonberg","lhasa","malamute","malinois","maltese","mastiff","mexicanhairless","mix","mountain","newfoundland","otterhound","papillon","pekinese","pembroke","pinscher","pitbull","pointer","pomeranian","poodle","pug","puggle","pyrenees","redbone","retriever","ridgeback","rottweiler","saluki","samoyed","schipperke","schnauzer","setter","sheepdog","shiba","shihtzu","spaniel","springer","stbernard","terrier","vizsla","waterdog","weimaraner","whippet","wolfhound","fullBreedNames","keyBreeds","Object","keys","fullBreedNameArr","forEach","subBreedNames","propName","length","push","configureBreedNames","handleAnswerSelectionFromImage","src","correctBreedName","end","lastIndexOf","split","slice","join","retrieveBreedName","breedName","includes","breedNameSwapped","a","b","handleNameSwap","multipleChoicesSet","Set","randomDogBreed","getRandomDog","multipleChoiceArrayOfObjects","Array","from","sort","random","getMultiChoiceAnswers","Game","setGameOver","dogImages","setScore","setEndTime","image","setImage","setBreed","questionNumber","setQuestionNumber","arrayIndex","setArrayIndex","arrowIcon","endTimeStamp","prevNumber","prevIndex","currentDog","dogData","DogAPI","getDoggoData","alt","prevScore","GamePage","handleHomeClick","setResetGame","gameOver","homeIcon","faHome","HighScore","Leaderboard","highScores","setHighScores","unsubscribe","orderBy","limit","onSnapshot","querySnapshot","scores","doc","displayHighScores","fetchTenDogs","dogPromiseArray","fetch","response","json","console","error","Promise","all","tenDogPromises","selectedDogImages","dogElement","dogImage","Image","message","preloadTenDogs","Signature","href","rel","App","setDogImages","setImagesLoaded","resetGame","then","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cafcdee6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./StartPage.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nfunction StartPage(props) {\n  const { imagesLoaded, setStartTime } = props;\n  const trophyIcon = (\n    <FontAwesomeIcon icon={faTrophy} size=\"3x\" className=\"nav-icon\" />\n  );\n\n  function handleStartTime() {\n    const date = new Date();\n    const startTimeStamp = date.getTime();\n    setStartTime(startTimeStamp);\n  }\n\n  return (\n    <div className=\"page-container\">\n      <nav className=\"nav-bar\">\n        <Link to=\"/Dog-Breed-Quiz/leaderboard\">{trophyIcon}</Link>\n      </nav>\n\n      <section className=\"start-page-main\">\n        <div className=\"title\">\n          <h1 className=\"title-text\">so you think you know </h1>\n          <h1 className=\"title-text\">dog breeds?</h1>\n        </div>\n        <div className=\"start-CTA\">\n          <Link to=\"/Dog-Breed-Quiz/game\">\n            {imagesLoaded ? (\n              <button className=\"start-button\" onClick={handleStartTime}>\n                start\n              </button>\n            ) : (\n              <button className=\"start-button\" disabled>\n                loading...\n              </button>\n            )}\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default StartPage;\n","import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\n  authDomain: `${process.env.REACT_APP_AUTH_DOMAIN}`,\n  databaseURL: `${process.env.REACT_APP_DATABASE_URL}`,\n  projectId: `${process.env.REACT_APP_PROJECT_ID}`,\n  storageBucket: `${process.env.REACT_APP_STORAGE_BUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGING_SENDER_ID}`,\n  appId: `${process.env.REACT_APP_APP_ID}`,\n  measurementId: `${process.env.REACT_APP_MEASUREMENT_ID}`,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\n\nexport default firebase;\n","import { firestore } from \"./firebaseConfig\";\n\nconst scoreRef = firestore.collection(\"high-scores\");\nexport default scoreRef;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport scoreRef from \"../../firebaseRef\";\nimport \"./Score.css\";\n\nfunction Score(props) {\n  const { score, endTime, startTime } = props;\n  const [finalScore, setFinalScore] = useState(0);\n  const [playerName, setPlayerName] = useState(\"\");\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setPlayerName(value);\n  }\n\n  function submitHighScore() {\n    if (playerName) {\n      const name = playerName.toLowerCase();\n      scoreRef.add({\n        name: name,\n        score: finalScore,\n      });\n    }\n  }\n\n  useEffect(() => {\n    const scoreSubtractTime = Math.floor(\n      score * 100 - (endTime - startTime) / 1000\n    );\n\n    if (scoreSubtractTime < 0) {\n      setFinalScore(0);\n      return;\n    }\n\n    setFinalScore(scoreSubtractTime);\n  }, []);\n\n  return (\n    <div className=\"score-container\">\n      <h1 className=\"final-score\">score: {finalScore}</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"enter your name\"\n          className=\"final-score-name\"\n          value={playerName}\n          onChange={handleChange}\n          required\n        ></input>\n        {playerName && (\n          <Link to=\"/Dog-Breed-Quiz/leaderboard\">\n            <FontAwesomeIcon\n              icon={faArrowRight}\n              size=\"3x\"\n              className=\"arrow-icon\"\n              onClick={submitHighScore}\n            />\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Score;\n","import React from \"react\";\n\nfunction AnswerChoices(props) {\n  const { handleChoice } = props;\n  const backgroundColor = {\n    backgroundColor: props.backgroundColor,\n  };\n\n  return (\n    <div className=\"text-center\">\n      <button\n        className={\n          backgroundColor.backgroundColor ? `correct-choice` : `multiple-choice`\n        }\n        onClick={(event) => handleChoice(event, props.text)}\n        style={backgroundColor}\n      >\n        {props.text}\n      </button>\n    </div>\n  );\n}\n\nexport default AnswerChoices;\n","import AnswerChoices from \"./AnswerChoices\";\nimport React from \"react\";\nimport \"./Answers.css\";\n\nfunction AnswerContainer(props) {\n  const {\n    breed,\n    multipleChoiceAnswers,\n    wasChoiceSelected,\n    setWasChoiceSelected,\n    setMultipleChoiceAnswers,\n  } = props.data;\n  const { incrementScore } = props;\n\n  function handleChoice(event, selectedAnswer) {\n    event.preventDefault();\n    //prevents the user from choosing an answer after they've chosen one\n    if (wasChoiceSelected) {\n      return;\n    }\n    // setUserSelectedAnswer(text);\n    showAnswerResult(selectedAnswer);\n  }\n\n  function getUpdateMultipleChoiceAnswers(selectedChoiceText) {\n    return multipleChoiceAnswers.map((multipleChoice) => {\n      // If the selected one is the current element\n      if (selectedChoiceText === multipleChoice.breed) {\n        // IF what is selected is the correct answer\n        if (selectedChoiceText === breed) {\n          incrementScore();\n          return {\n            backgroundColor: \"green\",\n            breed: selectedChoiceText,\n          };\n        }\n        // If what is selected is incorrect answer\n        return {\n          backgroundColor: \"red\",\n          breed: selectedChoiceText,\n        };\n      }\n\n      // No change for all others\n      return multipleChoice;\n    });\n  }\n\n  function showAnswerResult(id) {\n    const updatedChoices = getUpdateMultipleChoiceAnswers(id);\n    setMultipleChoiceAnswers(updatedChoices);\n\n    setWasChoiceSelected(true);\n  }\n\n  const answerChoices = multipleChoiceAnswers.map((element) => {\n    const { breed, backgroundColor } = element;\n\n    return (\n      <AnswerChoices\n        key={breed}\n        text={breed}\n        handleChoice={handleChoice}\n        backgroundColor={backgroundColor}\n      />\n    );\n  });\n\n  return <div>{answerChoices}</div>;\n}\n\nexport default AnswerContainer;\n","const breeds = {\n  affenpinscher: [],\n  african: [],\n  airedale: [],\n  akita: [],\n  appenzeller: [],\n  australian: [\"shepherd\"],\n  basenji: [],\n  beagle: [],\n  bluetick: [],\n  borzoi: [],\n  bouvier: [],\n  boxer: [],\n  brabancon: [],\n  briard: [],\n  buhund: [\"norwegian\"],\n  bulldog: [\"boston\", \"english\", \"french\"],\n  bullterrier: [\"staffordshire\"],\n  cairn: [],\n  cattledog: [\"australian\"],\n  chihuahua: [],\n  chow: [],\n  clumber: [],\n  cockapoo: [],\n  collie: [\"border\"],\n  coonhound: [],\n  corgi: [\"cardigan\"],\n  cotondetulear: [],\n  dachshund: [],\n  dalmatian: [],\n  dane: [\"great\"],\n  deerhound: [\"scottish\"],\n  dhole: [],\n  dingo: [],\n  doberman: [],\n  elkhound: [\"norwegian\"],\n  entlebucher: [],\n  eskimo: [],\n  frise: [\"bichon\"],\n  germanshepherd: [],\n  greyhound: [\"italian\"],\n  groenendael: [],\n  havanese: [],\n  hound: [\"afghan\", \"basset\", \"blood\", \"english\", \"ibizan\", \"plott\", \"walker\"],\n  husky: [],\n  keeshond: [],\n  kelpie: [],\n  komondor: [],\n  kuvasz: [],\n  labrador: [],\n  leonberg: [],\n  lhasa: [],\n  malamute: [],\n  malinois: [],\n  maltese: [],\n  mastiff: [\"bull\", \"english\", \"tibetan\"],\n  mexicanhairless: [],\n  mix: [],\n  mountain: [\"bernese\", \"swiss\"],\n  newfoundland: [],\n  otterhound: [],\n  papillon: [],\n  pekinese: [],\n  pembroke: [],\n  pinscher: [\"miniature\"],\n  pitbull: [],\n  pointer: [\"german\", \"german longhair\"],\n  pomeranian: [],\n  poodle: [\"miniature\", \"standard\", \"toy\"],\n  pug: [],\n  puggle: [],\n  pyrenees: [],\n  redbone: [],\n  retriever: [\"chesapeake\", \"curly\", \"flatcoated\", \"golden\"],\n  ridgeback: [\"rhodesian\"],\n  rottweiler: [],\n  saluki: [],\n  samoyed: [],\n  schipperke: [],\n  schnauzer: [\"giant\", \"miniature\"],\n  setter: [\"english\", \"gordon\", \"irish\"],\n  sheepdog: [\"english\", \"shetland\"],\n  shiba: [],\n  shihtzu: [],\n  spaniel: [\n    \"blenheim\",\n    \"brittany\",\n    \"cocker\",\n    \"irish\",\n    \"japanese\",\n    \"sussex\",\n    \"welsh\"\n  ],\n  springer: [\"english\"],\n  stbernard: [],\n  terrier: [\n    \"american\",\n    \"australian\",\n    \"bedlington\",\n    \"border\",\n    \"dandie\",\n    \"fox\",\n    \"irish\",\n    \"kerryblue\",\n    \"lakeland\",\n    \"norfolk\",\n    \"norwich\",\n    \"patterdale\",\n    \"russell\",\n    \"scottish\",\n    \"sealyham\",\n    \"silky\",\n    \"tibetan\",\n    \"toy\",\n    \"westhighland\",\n    \"wheaten\",\n    \"yorkshire\"\n  ],\n  vizsla: [],\n  waterdog: [\"spanish\"],\n  weimaraner: [],\n  whippet: [],\n  wolfhound: [\"irish\"]\n};\n\nexport default breeds;\n","import breeds from \"../data/breedsData\";\n\nconst fullBreedNames = configureBreedNames();\n\nfunction retrieveBreedName(src) {\n  const end = src.lastIndexOf(\"/\");\n  let breedName = src.split(\"\").slice(30, end).join(\"\");\n\n  return breedName;\n}\n\nfunction configureBreedNames() {\n  const keyBreeds = Object.keys(breeds);\n  const fullBreedNameArr = [];\n\n  keyBreeds.forEach((props) => {\n    const subBreedNames = breeds[props];\n    let propName = props;\n    if (subBreedNames.length >= 1) {\n      subBreedNames.forEach((name) =>\n        fullBreedNameArr.push(`${name} ${propName}`)\n      );\n    } else {\n      fullBreedNameArr.push(props);\n    }\n  });\n  return fullBreedNameArr;\n}\n\nfunction handleNameSwap(breedName) {\n  if (breedName.includes(\"-\")) {\n    const breedNameSwapped = breedName.split(\"-\");\n    let a = breedNameSwapped[0];\n    let b = breedNameSwapped[1];\n    [a, b] = [b, a];\n    breedName = [a, b].join(\" \");\n  }\n  return breedName;\n}\n\nfunction handleAnswerSelectionFromImage(src) {\n  let correctBreedName = retrieveBreedName(src);\n\n  correctBreedName = handleNameSwap(correctBreedName);\n\n  const updatedChoices = getMultiChoiceAnswers(correctBreedName);\n\n  return {\n    correctBreedName: correctBreedName,\n\n    multipleChoiceAnswers: updatedChoices,\n  };\n}\n\nfunction getRandomDog() {\n  const chooseRandomDog =\n    fullBreedNames[Math.floor(Math.random() * fullBreedNames.length)];\n  return chooseRandomDog;\n}\n\nfunction getMultiChoiceAnswers(correctBreedName) {\n  // Add the correct breedName into the set\n  const multipleChoicesSet = new Set([correctBreedName]);\n\n  // While the set is not equal to 4\n  while (multipleChoicesSet.size <= 3) {\n    let randomDogBreed = getRandomDog();\n\n    //  Add a random dog breed name, NOT dog object to the set\n    multipleChoicesSet.add(randomDogBreed);\n  }\n  // If we exited while then we have 4 dog names in a set\n\n  // Convert set to array of dog objects\n  const multipleChoiceArray = Array.from(multipleChoicesSet);\n  const multipleChoiceArrayOfObjects = multipleChoiceArray.map((breedName) => ({\n    breed: breedName,\n  }));\n\n  // Shuffle\n  multipleChoiceArrayOfObjects.sort(() => 0.5 - Math.random());\n  return multipleChoiceArrayOfObjects;\n}\n\nexport {\n  retrieveBreedName,\n  configureBreedNames,\n  handleNameSwap,\n  handleAnswerSelectionFromImage,\n};\n","import React, { useState, useEffect } from \"react\";\nimport AnswerContainer from \"../AnswerContainer/AnswerContainer\";\nimport * as DogAPI from \"../../utils/dogApi\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Game(props) {\n  const { setGameOver, dogImages, score, setScore, setEndTime } = props;\n\n  //the single image\n  const [image, setImage] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [wasChoiceSelected, setWasChoiceSelected] = useState(false);\n  const [multipleChoiceAnswers, setMultipleChoiceAnswers] = useState([]);\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [arrayIndex, setArrayIndex] = useState(0);\n  // const errorMsg = \"Oops, something went wrong! :-(\";\n\n  const arrowIcon = (\n    <FontAwesomeIcon\n      icon={faArrowRight}\n      size=\"3x\"\n      className=\"arrow-icon\"\n      onClick={handleArrowClick}\n    />\n  );\n\n  function getDoggoData() {\n    setArrayIndex((prevIndex) => prevIndex + 1);\n    const currentDog = dogImages[arrayIndex].src;\n\n    const dogData = DogAPI.handleAnswerSelectionFromImage(currentDog);\n    setImage(currentDog);\n    setBreed(dogData.correctBreedName);\n    setMultipleChoiceAnswers(dogData.multipleChoiceAnswers);\n  }\n\n  function handleArrowClick() {\n    if (questionNumber === 10) {\n      setGameOver(true);\n      const date = new Date();\n      const endTimeStamp = date.getTime();\n      setEndTime(endTimeStamp);\n      return;\n    }\n    if (questionNumber < 10) {\n      setQuestionNumber((prevNumber) => prevNumber + 1);\n      setWasChoiceSelected(false);\n    }\n  }\n\n  function increment() {\n    setScore((prevScore) => prevScore + 1);\n  }\n\n  useEffect(() => {\n    getDoggoData();\n  }, [questionNumber]);\n\n  return (\n    <div>\n      <span className=\"score-info\">\n        score: {score} - round {questionNumber}\n      </span>\n      <div className=\"game-page-main\">\n        <div className=\"dog-image-container\">\n          <img className=\"dog-image\" src={image} alt=\"random dog\" />\n        </div>\n        <div className=\"answer-container\">\n          <AnswerContainer\n            data={{\n              breed: breed,\n              multipleChoiceAnswers: multipleChoiceAnswers,\n              wasChoiceSelected: wasChoiceSelected,\n              setWasChoiceSelected: setWasChoiceSelected,\n              setMultipleChoiceAnswers: setMultipleChoiceAnswers,\n            }}\n            incrementScore={increment}\n          />\n        </div>\n        <div>{arrowIcon}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport Score from \"../Score/Score\";\nimport Game from \"./Game\";\nimport \"./GamePage.css\";\n\nfunction GamePage(props) {\n  const {\n    dogImages,\n    handleHomeClick,\n    setResetGame,\n    setEndTime,\n    startTime,\n    endTime,\n  } = props;\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const homeIcon = (\n    <FontAwesomeIcon\n      icon={faHome}\n      size=\"3x\"\n      className=\"nav-icon\"\n      onClick={handleHomeClick}\n    />\n  );\n\n  return (\n    <div className=\"page-container\">\n      <nav className=\"nav-bar\">\n        <Link to=\"/Dog-Breed-Quiz/\">{homeIcon}</Link>\n      </nav>\n      {gameOver ? (\n        <Score score={score} startTime={startTime} endTime={endTime} />\n      ) : (\n        <Game\n          setGameOver={setGameOver}\n          setResetGame={setResetGame}\n          dogImages={dogImages}\n          score={score}\n          setScore={setScore}\n          setEndTime={setEndTime}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default GamePage;\n","import React from \"react\";\nimport \"./Leaderboard.css\";\n\nfunction HighScore(props) {\n  const { name, score } = props.data;\n  return (\n    <div className=\"high-score-single\">\n      <span className=\"high-score-name\">{name}</span>\n      <span className=\"high-score-score\">{score}</span>\n    </div>\n  );\n}\n\nexport default HighScore;\n","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport \"./Leaderboard.css\";\nimport scoreRef from \"../../firebaseRef\";\nimport HighScore from \"./HighScore\";\n\nfunction Leaderboard(props) {\n  const { handleHomeClick } = props;\n  const [highScores, setHighScores] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = scoreRef\n      .orderBy(\"score\", \"desc\")\n      .limit(10)\n      .onSnapshot((querySnapshot) => {\n        const scores = [];\n        querySnapshot.forEach((doc) => {\n          scores.push(doc.data());\n        });\n        setHighScores(scores);\n      });\n\n    return () => unsubscribe();\n  }, []);\n\n  const displayHighScores = highScores.map((element) => (\n    <HighScore data={element} key={`${element.name}${element.score}`} />\n  ));\n\n  const homeIcon = (\n    <FontAwesomeIcon\n      icon={faHome}\n      size=\"3x\"\n      className=\"nav-icon\"\n      onClick={handleHomeClick}\n    />\n  );\n  return (\n    <div className=\"page-container\">\n      <nav className=\"nav-bar\">\n        <Link to=\"/Dog-Breed-Quiz/\">{homeIcon}</Link>\n      </nav>\n      <h1 className=\"title-text\">high score</h1>\n      <section className=\"leaderboard-main\">{displayHighScores}</section>\n    </div>\n  );\n}\n\nexport default Leaderboard;\n","async function preloadTenDogs() {\n  async function fetchTenDogs() {\n    const dogPromiseArray = [];\n    while (dogPromiseArray.length < 10) {\n      try {\n        const response = await fetch(\"https://dog.ceo/api/breeds/image/random\");\n        const data = await response.json();\n        dogPromiseArray.push(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    return await Promise.all(dogPromiseArray);\n  }\n  const tenDogPromises = await fetchTenDogs();\n  const selectedDogImages = tenDogPromises.map((dogElement) => {\n    const dogImage = new Image();\n    dogImage.src = dogElement.message;\n    return dogImage;\n  });\n\n  return selectedDogImages;\n}\n\nexport default preloadTenDogs;\n","import React from \"react\";\n\nfunction Signature() {\n  return (\n    <div>\n      <a\n        href=\"https://sophietsai.com/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"signature\"\n      >\n        created by sophie tsai.\n      </a>\n    </div>\n  );\n}\n\nexport default Signature;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport StartPage from \"./components/StartPage/StartPage\";\nimport GamePage from \"./components/GamePage/GamePage\";\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\";\nimport preloadTenDogs from \"./utils/preloadingApi\";\nimport Signature from \"./Signature\";\n\nfunction App() {\n  const [dogImages, setDogImages] = useState([]);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [resetGame, setResetGame] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n\n  useEffect(() => {\n    setImagesLoaded(false);\n    const selectedDogImages = preloadTenDogs();\n    selectedDogImages.then((value) => setDogImages(value));\n    setResetGame(false);\n  }, [resetGame]);\n\n  function handleHomeClick() {\n    setResetGame(true);\n  }\n\n  useEffect(() => {\n    if (dogImages.length === 10) {\n      setImagesLoaded(true);\n    }\n  }, [dogImages]);\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/Dog-Breed-Quiz/\">\n          <StartPage imagesLoaded={imagesLoaded} setStartTime={setStartTime} />\n        </Route>\n        <Route exact path=\"/Dog-Breed-Quiz/game\">\n          {imagesLoaded && (\n            <GamePage\n              dogImages={dogImages}\n              imagesLoaded={imagesLoaded}\n              setResetGame={setResetGame}\n              handleHomeClick={handleHomeClick}\n              setEndTime={setEndTime}\n              startTime={startTime}\n              endTime={endTime}\n            />\n          )}\n        </Route>\n        <Route exact path=\"/Dog-Breed-Quiz/leaderboard\">\n          <Leaderboard handleHomeClick={handleHomeClick} />\n        </Route>\n      </Switch>\n      <Signature />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}